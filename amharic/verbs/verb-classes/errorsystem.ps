%!PS-Adobe-2.0
%%Creator: dvips 5.58 Copyright 1986, 1994 Radical Eye Software
%%Title: errorsystem.dvi
%%CreationDate: Thu May 13 02:17:49 1999
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips errorsystem.dvi
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1999.05.13:0216
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{dup length product length le{dup length product
exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}
ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false RMat{BDot}
imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1 false
RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform round
exch round exch itransform moveto rulex 0 rlineto 0 ruley neg rlineto
rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail{dup
/delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}B /d{
-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{4 M}B
/w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{p 1 w}
B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p a}B
/bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
%%BeginProcSet: color.pro
TeXDict begin /setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse /TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def /TeXcolorgrey{setgray}def /TeXcolorgray{
setgray}def /TeXcolorhsb{sethsbcolor}def /currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse /DC{exch dup userdict exch
known{pop pop}{X}ifelse}B /GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC /Goldenrod{0 0.10 0.84 0 setcmykcolor}
DC /Dandelion{0 0.29 0.84 0 setcmykcolor}DC /Apricot{0 0.32 0.52 0
setcmykcolor}DC /Peach{0 0.50 0.70 0 setcmykcolor}DC /Melon{0 0.46 0.50
0 setcmykcolor}DC /YellowOrange{0 0.42 1 0 setcmykcolor}DC /Orange{0
0.61 0.87 0 setcmykcolor}DC /BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC /RedOrange{0 0.77 0.87 0
setcmykcolor}DC /Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC /Maroon{0
0.87 0.68 0.32 setcmykcolor}DC /BrickRed{0 0.89 0.94 0.28 setcmykcolor}
DC /Red{0 1 1 0 setcmykcolor}DC /OrangeRed{0 1 0.50 0 setcmykcolor}DC
/RubineRed{0 1 0.13 0 setcmykcolor}DC /WildStrawberry{0 0.96 0.39 0
setcmykcolor}DC /Salmon{0 0.53 0.38 0 setcmykcolor}DC /CarnationPink{0
0.63 0 0 setcmykcolor}DC /Magenta{0 1 0 0 setcmykcolor}DC /VioletRed{0
0.81 0 0 setcmykcolor}DC /Rhodamine{0 0.82 0 0 setcmykcolor}DC /Mulberry
{0.34 0.90 0 0.02 setcmykcolor}DC /RedViolet{0.07 0.90 0 0.34
setcmykcolor}DC /Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC /Lavender{0
0.48 0 0 setcmykcolor}DC /Thistle{0.12 0.59 0 0 setcmykcolor}DC /Orchid{
0.32 0.64 0 0 setcmykcolor}DC /DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}
DC /Purple{0.45 0.86 0 0 setcmykcolor}DC /Plum{0.50 1 0 0 setcmykcolor}
DC /Violet{0.79 0.88 0 0 setcmykcolor}DC /RoyalPurple{0.75 0.90 0 0
setcmykcolor}DC /BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC /Periwinkle
{0.57 0.55 0 0 setcmykcolor}DC /CadetBlue{0.62 0.57 0.23 0 setcmykcolor}
DC /CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC /MidnightBlue{0.98 0.13
0 0.43 setcmykcolor}DC /NavyBlue{0.94 0.54 0 0 setcmykcolor}DC
/RoyalBlue{1 0.50 0 0 setcmykcolor}DC /Blue{1 1 0 0 setcmykcolor}DC
/Cerulean{0.94 0.11 0 0 setcmykcolor}DC /Cyan{1 0 0 0 setcmykcolor}DC
/ProcessBlue{0.96 0 0 0 setcmykcolor}DC /SkyBlue{0.62 0 0.12 0
setcmykcolor}DC /Turquoise{0.85 0 0.20 0 setcmykcolor}DC /TealBlue{0.86
0 0.34 0.02 setcmykcolor}DC /Aquamarine{0.82 0 0.30 0 setcmykcolor}DC
/BlueGreen{0.85 0 0.33 0 setcmykcolor}DC /Emerald{1 0 0.50 0
setcmykcolor}DC /JungleGreen{0.99 0 0.52 0 setcmykcolor}DC /SeaGreen{
0.69 0 0.50 0 setcmykcolor}DC /Green{1 0 1 0 setcmykcolor}DC
/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC /PineGreen{0.92 0 0.59
0.25 setcmykcolor}DC /LimeGreen{0.50 0 1 0 setcmykcolor}DC /YellowGreen{
0.44 0 0.74 0 setcmykcolor}DC /SpringGreen{0.26 0 0.76 0 setcmykcolor}
DC /OliveGreen{0.64 0 0.95 0.40 setcmykcolor}DC /RawSienna{0 0.72 1 0.45
setcmykcolor}DC /Sepia{0 0.83 1 0.70 setcmykcolor}DC /Brown{0 0.81 1
0.60 setcmykcolor}DC /Tan{0.14 0.42 0.56 0 setcmykcolor}DC /Gray{0 0 0
0.50 setcmykcolor}DC /Black{0 0 0 1 setcmykcolor}DC /White{0 0 0 0
setcmykcolor}DC end
%%EndProcSet
TeXDict begin @defspecial

 TeXDict begin /box{newpath 2 copy moveto 3 copy pop exch lineto 4
copy pop pop lineto 4 copy exch pop exch pop lineto closepath } bind
def /min{ 2 copy gt { exch } if pop } bind def/max{ 2 copy lt { exch
} if pop } bind def/roundedbox{/radius exch store 3 2 roll 2 copy min
radius sub /miny exch store max radius add /maxy exch store 2 copy
min radius sub /minx exch store max radius add /maxx exch store newpath
minx radius add miny moveto maxx miny maxx maxy radius arcto maxx maxy
minx maxy radius arcto minx maxy minx miny radius arcto minx miny maxx
miny radius arcto 16 {pop} repeat closepath }bind def /rectcartouche{box
gsave .95 setgray fill grestore 1 setlinewidth stroke }bind def /cartouche{roundedbox
gsave .95 setgray fill grestore 1 setlinewidth stroke }bind def end
 
@fedspecial end TeXDict begin
40258437 52099154 1000 300 300 (/home/root/work/amharic/errorsystem.dvi)
@start /Fa 51 122 df<007E1F0001C1B1800303E3C00703C3C00E03C1800E01C0000E
01C0000E01C0000E01C0000E01C0000E01C000FFFFFC000E01C0000E01C0000E01C0000E
01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E
01C0000E01C0000E01C0000E01C0007F87FC001A1D809C18>11 D<007E0001C180030180
0703C00E03C00E01800E00000E00000E00000E00000E0000FFFFC00E01C00E01C00E01C0
0E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0
0E01C07F87F8151D809C17>I<003F07E00001C09C18000380F018000701F03C000E01E0
3C000E00E018000E00E000000E00E000000E00E000000E00E000000E00E00000FFFFFFFC
000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C00
0E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E
00E01C000E00E01C007FC7FCFF80211D809C23>14 D<00800100020006000C000C001800
18003000300030006000600060006000E000E000E000E000E000E000E000E000E000E000
E000E0006000600060006000300030003000180018000C000C000600020001000080092A
7C9E10>40 D<8000400020003000180018000C000C000600060006000300030003000300
038003800380038003800380038003800380038003800380030003000300030006000600
06000C000C00180018003000200040008000092A7E9E10>I<0006000000060000000600
000006000000060000000600000006000000060000000600000006000000060000000600
0000060000FFFFFFE0FFFFFFE00006000000060000000600000006000000060000000600
00000600000006000000060000000600000006000000060000000600001B1C7E9720>43
D<60F0F0701010101020204080040C7C830C>I<FFE0FFE00B0280890E>I<60F0F0600404
7C830C>I<00010003000600060006000C000C000C001800180018003000300030006000
6000C000C000C0018001800180030003000300060006000C000C000C0018001800180030
0030003000600060006000C000C00010297E9E15>I<03C00C301818300C300C700E6006
6006E007E007E007E007E007E007E007E007E007E007E007E007E00760066006700E300C
300C18180C3007E0101D7E9B15>I<010007003F00C70007000700070007000700070007
000700070007000700070007000700070007000700070007000700070007000700FFF80D
1C7C9B15>I<07C01830201C400C400EF00FF80FF807F8077007000F000E000E001C001C
00380070006000C00180030006010C01180110023FFE7FFEFFFE101C7E9B15>I<07E018
30201C201C781E780E781E381E001C001C00180030006007C00030001C001C000E000F00
0F700FF80FF80FF80FF00E401C201C183007C0101D7E9B15>I<000C00000C00001C0000
3C00003C00005C0000DC00009C00011C00031C00021C00041C000C1C00081C00101C0030
1C00201C00401C00C01C00FFFFC0001C00001C00001C00001C00001C00001C00001C0001
FFC0121C7F9B15>I<300C3FF83FF03FC020002000200020002000200023E02C30301830
1C200E000E000F000F000F600FF00FF00FF00F800E401E401C2038187007C0101D7E9B15
>I<00F0030C04040C0E181E301E300C700070006000E3E0E430E818F00CF00EE006E007
E007E007E007E007600760077006300E300C18180C3003E0101D7E9B15>I<4000007FFF
807FFF007FFF0040020080040080040080080000100000100000200000600000400000C0
0000C00001C0000180000180000380000380000380000380000780000780000780000780
00078000078000030000111D7E9B15>I<03E00C301008200C200660066006700670067C
0C3E183FB01FE007F007F818FC307E601E600FC007C003C003C003C00360026004300C1C
1007E0101D7E9B15>I<60F0F0600000000000000000000060F0F0701010101020204080
041A7C910C>59 D<000600000006000000060000000F0000000F0000000F000000178000
001780000037C0000023C0000023C0000043E0000041E0000041E0000080F0000080F000
0080F000010078000100780001FFF80002003C0002003C0002003C0004001E0004001E00
0C001F000C000F001E001F00FF00FFF01C1D7F9C1F>65 D<001F808000E0618001801980
070007800E0003801C0003801C00018038000180780000807800008070000080F0000000
F0000000F0000000F0000000F0000000F0000000F0000000F00000007000008078000080
78000080380000801C0001001C0001000E000200070004000180080000E03000001FC000
191E7E9C1E>67 D<FFFFF80F00780F00180F00080F00080F000C0F00040F00040F01040F
01000F01000F01000F03000FFF000F03000F01000F01000F01000F01000F00000F00000F
00000F00000F00000F00000F00000F0000FFF800161C7E9B1B>70
D<FF001FF00F8003800FC001000BC0010009E0010008F0010008F0010008780100083C01
00083E0100081E0100080F0100080F8100080781000803C1000801E1000801F1000800F1
000800790008007D0008003D0008001F0008001F0008000F0008000700080003001C0003
00FF8001001C1C7F9B1F>78 D<003F800000E0E0000380380007001C000E000E001C0007
003C00078038000380780003C0780003C0700001C0F00001E0F00001E0F00001E0F00001
E0F00001E0F00001E0F00001E0F00001E0700001C0780003C0780003C0380003803C0007
801C0007000E000E0007001C000380380000E0E000003F80001B1E7E9C20>I<FFFF800F
00E00F00780F003C0F001C0F001E0F001E0F001E0F001E0F001E0F001C0F003C0F00780F
00E00FFF800F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F
00000F0000FFF000171C7E9B1C>I<1FC000307000783800781C00301C00001C00001C00
01FC000F1C00381C00701C00601C00E01C40E01C40E01C40603C40304E801F870012127E
9115>97 D<FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C
00001C7C001D87001E01801C00C01C00E01C00601C00701C00701C00701C00701C00701C
00701C00601C00E01C00C01E018019070010FC00141D7F9C17>I<03F80C0C181E301E70
0C6000E000E000E000E000E000E00060007002300218040C1803E00F127F9112>I<001F
8000038000038000038000038000038000038000038000038000038000038003F3800E0B
80180780300380700380600380E00380E00380E00380E00380E00380E003806003807003
803003801807800E1B8003E3F0141D7F9C17>I<07E00C301818300C700E6006E006FFFE
E000E000E000E00060007002300218040C1803E00F127F9112>I<00F8018C071E061E0E
0C0E000E000E000E000E000E00FFE00E000E000E000E000E000E000E000E000E000E000E
000E000E000E000E000E007FE00F1D809C0D>I<00038007C4C01C78C038388030180070
1C00701C00701C00701C003018003838001C700027C0002000002000003000003FF8001F
FF001FFF802003806001C0C000C0C000C0C000C06001803003001C0E0007F800121C7F92
15>I<FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C0000
1C7C001C87001D03001E03801C03801C03801C03801C03801C03801C03801C03801C0380
1C03801C03801C03801C03801C0380FF9FF0141D7F9C17>I<18003C003C001800000000
0000000000000000000000FC001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C00FF80091D7F9C0C>I<00C001E001E000C000000000000000000000
0000000007E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E060E0F0C0F1C061803E000B25839C0D>I<FC00001C00001C0000
1C00001C00001C00001C00001C00001C00001C00001C00001C0FE01C07801C06001C0C00
1C10001C20001C40001CE0001DE0001E70001C78001C38001C3C001C1C001C0E001C0F00
1C0F80FF9FE0131D7F9C16>I<FC001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00FF8009
1D7F9C0C>I<FC7E07E0001C838838001D019018001E01E01C001C01C01C001C01C01C00
1C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C
01C01C001C01C01C001C01C01C001C01C01C00FF8FF8FF8021127F9124>I<FC7C001C87
001D03001E03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03
801C03801C03801C0380FF9FF014127F9117>I<03F0000E1C0018060030030070038060
0180E001C0E001C0E001C0E001C0E001C0E001C06001807003803003001806000E1C0003
F00012127F9115>I<FC7C001D87001E01801C01C01C00E01C00E01C00701C00701C0070
1C00701C00701C00701C00E01C00E01C01C01E01801D07001CFC001C00001C00001C0000
1C00001C00001C00001C0000FF8000141A7F9117>I<03E0800E19801805803807807003
80700380E00380E00380E00380E00380E00380E003807003807003803807801807800E1B
8003E380000380000380000380000380000380000380000380001FF0141A7F9116>I<FC
E01D381E781E781C301C001C001C001C001C001C001C001C001C001C001C001C00FFC00D
127F9110>I<1F9020704030C010C010E010F8007F803FE00FF000F880388018C018C018
E010D0608FC00D127F9110>I<04000400040004000C000C001C003C00FFE01C001C001C
001C001C001C001C001C001C001C101C101C101C101C100C100E2003C00C1A7F9910>I<
FC1F801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C0380
1C03801C03801C07800C07800E1B8003E3F014127F9117>I<FF07E03C03801C01001C01
000E02000E02000F060007040007040003880003880003C80001D00001D00000E00000E0
0000E00000400013127F9116>I<FF3FC7E03C0703C01C0701801C0701001C0B01000E0B
82000E0B82000E1182000711C4000711C4000720C40003A0E80003A0E80003C0680001C0
700001C0700001803000008020001B127F911E>I<FF0FE01E07001C06000E0400070800
03900003B00001E00000E00000F00001F000013800021C00041C000C0E001807003C0780
FE1FF014127F9116>I<FF07E03C03801C01001C01000E02000E02000F06000704000704
0003880003880003C80001D00001D00000E00000E00000E0000040000040000080000080
00F08000F10000F30000660000380000131A7F9116>I E /Fb 16
118 df<000070000000007000000000F800000000F800000000F800000001FC00000001
FC00000003FE00000003FE00000003FE000000067F000000067F0000000C7F8000000C3F
8000000C3F800000181FC00000181FC00000301FE00000300FE00000700FF000006007F0
00006007F00000C007F80000FFFFF80001FFFFFC00018001FC00018001FC00030001FE00
030000FE00070000FF000600007F000600007F00FFE007FFF8FFE007FFF825227EA12A>
65 D<0003FE0080001FFF818000FF01E38001F8003F8003E0001F8007C0000F800F8000
07801F800007803F000003803F000003807F000001807E000001807E00000180FE000000
00FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
7E000000007E000001807F000001803F000001803F000003801F800003000F8000030007
C000060003F0000C0001F800380000FF00F000001FFFC0000003FE000021227DA128>67
D<FFFFFFFCFFFFFFFC07F000FC07F0003C07F0001C07F0000C07F0000E07F0000E07F000
0607F00C0607F00C0607F00C0607F00C0007F01C0007F03C0007FFFC0007FFFC0007F03C
0007F01C0007F00C0007F00C0007F00C0307F00C0307F0000307F0000607F0000607F000
0607F0000E07F0000E07F0001E07F0003E07F001FCFFFFFFFCFFFFFFFC20227EA125>69
D<0FFC003FFF807E07C07E03E07E01E07E01F03C01F00001F00001F0003FF003FDF01FC1
F03F01F07E01F0FC01F0FC01F0FC01F0FC01F07E02F07E0CF81FF87F07E03F18167E951B
>97 D<00FF8007FFE00F83F01F03F03E03F07E03F07C01E07C0000FC0000FC0000FC0000
FC0000FC0000FC00007C00007E00007E00003E00181F00300FC06007FFC000FF0015167E
9519>99 D<00FE0007FF800F87C01E01E03E01F07C00F07C00F8FC00F8FC00F8FFFFF8FF
FFF8FC0000FC0000FC00007C00007C00007E00003E00181F00300FC07003FFC000FF0015
167E951A>101 D<01FE0F0007FFBF800F87C7801F03E7801E01E0003E01F0003E01F000
3E01F0003E01F0003E01F0001E01E0001F03E0000F87C0000FFF800009FE000018000000
180000001C0000001FFFE0000FFFF80007FFFE001FFFFF003C003F0078000F80F0000780
F0000780F0000780F000078078000F003C001E001F007C000FFFF80001FFC00019217F95
1C>103 D<1C003E007F007F007F003E001C000000000000000000000000000000FF00FF
001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F
00FFE0FFE00B247EA310>105 D<0038007C00FE00FE00FE007C00380000000000000000
00000000000003FE03FE003E003E003E003E003E003E003E003E003E003E003E003E003E
003E003E003E003E003E003E003E003E003E003E783EFC3EFC3CFC7C78F87FE01F800F2E
83A311>I<FF07E000FF1FF8001F307C001F403C001F803E001F803E001F003E001F003E
001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E
001F003E001F003E001F003E00FFE1FFC0FFE1FFC01A167E951F>110
D<00FE0007FFC00F83E01E00F03E00F87C007C7C007C7C007CFC007EFC007EFC007EFC00
7EFC007EFC007EFC007E7C007C7C007C3E00F81F01F00F83E007FFC000FE0017167E951C
>I<FF0FE000FF3FF8001FE07C001F803E001F001F001F001F801F001F801F000FC01F00
0FC01F000FC01F000FC01F000FC01F000FC01F000FC01F000FC01F001F801F001F801F80
3F001FC03E001FE0FC001F3FF8001F0FC0001F0000001F0000001F0000001F0000001F00
00001F0000001F0000001F000000FFE00000FFE000001A207E951F>I<FE1F00FE3FC01E
67E01EC7E01E87E01E87E01F83C01F00001F00001F00001F00001F00001F00001F00001F
00001F00001F00001F00001F00001F0000FFF000FFF00013167E9517>114
D<0FF3003FFF00781F00600700E00300E00300F00300FC00007FE0007FF8003FFE000FFF
0001FF00000F80C00780C00380E00380E00380F00700FC0E00EFFC00C7F00011167E9516
>I<0180000180000180000180000380000380000780000780000F80003F8000FFFF00FF
FF000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F
81800F81800F81800F81800F81800F830007C30003FE0000F80011207F9F16>I<FF01FE
00FF01FE001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E
001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F007E001F00FE
000F81BE0007FF3FC001FC3FC01A167E951F>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop Black Black 220 -104 a Fb(Conjugation)19 b(Acceptions)p
Black 282 -28 a Fa(/)p Black 21 w(Normal)12 b(\(b)q(oth)i(p)q(ositiv)o
(e)f(and)h(negativ)o(e)g(forms)e(exist\).)p Black 271
55 a(+)p Black 21 w(P)o(ositiv)o(e)h(Only)m(.)p Black
289 138 a(-)p Black 21 w(Negativ)o(e)h(Only)m(.)p Black
248 221 a(0-7)p Black 20 w(No)g(form)e(kno)o(wn)h(for)h(reasons)g(0-7.)
220 529 y Fb(Conjugation)19 b(Errors)p Black 282 606
a Fa(0)p Black 21 w(Conjugations)13 b(are)h(not)g(used)g(or)g(are)h
(not)e(meaningful.)p Black 271 689 a(1.)p Black 20 w(P)o(ossible)h(to)g
(conjugate,)f(but)h(in)g(practice)g(not)g(used)h(\(or)f(use)h(is)f
(uncertain\).)p Black 271 772 a(2.)p Black 20 w(Conjugations)f(are)h
(sensible,)g(but)g(in)g(practice)h(not)e(used.)p Black
271 855 a(3.)p Black 20 w(Conjugations)g(are)h(sensible,)g(but)g(an)g
(alternate)g(v)o(erb)h(is)e(pre\013ered.)p Black 271
938 a(4.)p Black 20 w(F)m(rom)19 b(old)h(Amharic,)h(can)g(not)f
(conjugate)h(reliably)f(\(not)h(found)f(in)g(a)o(v)n(ailable)324
988 y(references\).)h(An)14 b(alternate)g(v)o(erb)h(of)e(the)h(same)f
(meaning)f(is)i(a)o(v)n(ailable.)p Black 271 1071 a(5.)p
Black 20 w(F)m(rom)e(old)i(Amharic)g(or)g(v)o(ery)h(rare,)g(can)f(not)h
(conjugate)g(reliably)m(.)j(Not)c(found)h(in)324 1120
y(a)o(v)n(ailable)c(references.)p Black 271 1203 a(6.)p
Black 20 w(Conjugations)16 b(are)i(not)f(kno)o(w)g(for)g(this)h(stem;)g
(ho)o(w)o(ev)o(er)g(they)g(are)g(p)q(ossible)f(for)324
1253 y(another)d(form.)p Black 271 1336 a(7.)p Black
20 w(Conjugated)f(form)f(not)i(found)g(alone,)f(a)g(su\016x)h(or)g
(pre\014x)g(is)g(required.)p Black 271 1419 a(8.)p Black
20 w(Conjugated)f(form)f(exists)j(but)f(the)h(stem)e(meaning)f(c)o
(hanges.)p Black Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
